import{e as s,y as o,c as l,c0 as P,S as O,u as y,ee as C,d as _,k as M,C as k,a as R,ae as U}from"./index-Din4d8RI.js";import{o as T}from"./StreamFeatureManager-Cap55eAl.js";import{createConnection as $}from"./createConnection-B3YG2Rak.js";import{h as G}from"./EventedSet-D2a5rrsp.js";import{b as x}from"./HeatmapDensity.glsl-APkJs5LC.js";import{n as j}from"./LayerView3D-ByXx_Ey8.js";import{u as E}from"./LayerView-Doc6VNgb.js";import{d as V}from"./FeatureFilter-D9eOTJdJ.js";import"./query-0K28qvXA.js";import"./pbfQueryUtils-Dpi7fjat.js";import"./pbf-DG3UltQX.js";import"./queryZScale-FpTkmD5Y.js";import"./dehydratedFeatureComparison-qo7I0MHq.js";import"./queryForSymbologySnapping-pyPl-VI_.js";import"./hash-CcEbRgUF.js";import"./diffUtils-CePDruc4.js";import"./UniqueValueRenderer-B-voSb8A.js";import"./ColorStop-16ETMV51.js";import"./colorRamps-hYA4ymsG.js";import"./Graphics3DObjectStates-BQUabXhG.js";import"./jsonUtils-c6oBqWYe.js";import"./FieldsIndex-B4kulqAM.js";import"./UnknownTimeZone-BCQNo1yu.js";import"./heatmapUtils-DBYyw14o.js";import"./optimizedFeatureQueryEngineAdapter-CaTwDrEP.js";import"./PooledRBush-Z32LDxd3.js";import"./quickselect-_9I4X5L3.js";import"./popupUtils-DXGsgz64.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./QueryEngine-GHRrXoY3.js";import"./WhereClause-BEQtBVYH.js";import"./TimeOnly-N1Nx6Ue8.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-DDupRTEU.js";import"./utils-dORmJKvc.js";import"./utils-YYw9Atk0.js";import"./ClassBreaksDefinition-uhY-02_B.js";import"./FeatureSet-xAgnLnDD.js";import"./FeatureStore-CoN1IVBc.js";import"./BoundsStore-C2WOFUDf.js";import"./projectExtentUtils-BS9RInsG.js";const L=2500;let d=class extends M{getObjectId(){return this.objectId}};s([o({type:Number,json:{read:!0}})],d.prototype,"objectId",void 0),d=s([l("esri.layers.graphics.controllers.StreamGraphic")],d);class F{constructor(t){this.onUpdate=t,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(t){this._idToGraphic.set(t.objectId,t)}get(t){return this._idToGraphic.get(t)}forEach(t){this._idToGraphic.forEach(t)}removeById(t){const r=this._idToGraphic.get(t);return r?(r.sourceLayer=r.layer=null,this._idToGraphic.delete(t),r):null}update(t,r){this.onUpdate(t,r)}get size(){return this._idToGraphic.size}}let n=class extends P(O){constructor(){super(...arguments),this.isPaused=!1,this.graphics=new G,this._updateInfo={websocket:0,client:0},this._updateIntervalId=null,this._outSpatialReference=null}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}_clearInterval(){this._updateIntervalId!==null&&(clearInterval(this._updateIntervalId),this._updateIntervalId=null)}clear(){this._shutdown(),this.graphics.clear()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_shutdown(){this._clearInterval(),this.connection=y(this.connection),this.store=y(this.store),this.removeAllHandles()}_startup(){const{layer:e,layerView:t}=this,{spatialReference:r,definitionExpression:c,geometryDefinition:p,objectIdField:h,timeInfo:f,purgeOptions:g,maxReconnectionAttempts:v,maxReconnectionInterval:I,customParameters:S}=e,w=e.geometryType?C.toJSON(e.geometryType):null,b=r,u=t.view.spatialReference;this.clear(),this._set("connection",$(e.parsedUrl,b,u,w,c,p,v,I,S??void 0)),this._outSpatialReference=u.toJSON(),this.store=new F(this._onUpdate.bind(this)),this.featuresManager=new T(this.store,h,f.toJSON(),g);const m="startup-watches";this.removeHandles(m),this.addHandles([e.on("send-message-to-socket",a=>this.connection.sendMessageToSocket(a)),e.on("send-message-to-client",a=>this.connection.sendMessageToClient(a)),this.connection.on("data-received",a=>this._onFeature(a)),this.connection.on("message-received",a=>this._onWebSocketMessage(a)),_(()=>[e.definitionExpression,e.geometryDefinition,e.purgeOptions],()=>this._startup())],m),this.isPaused||this._initUpdateInterval()}_onWebSocketMessage(e){if(this.layerView.emit("message-received",e),"type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this.featuresManager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this.featuresManager.removeByTrackId(t);break;case"clear":this.store.forEach(t=>this.featuresManager.removeById(t.objectId))}}_onFeature(e){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry});try{e.geometry==null||e.geometry.spatialReference||(e.geometry.spatialReference=this._outSpatialReference);const t=d.fromJSON(e);t.sourceLayer=t.layer=this.layer,this.featuresManager.add(t)}catch{}}_onUpdate(e,t){t!=null&&this.graphics.removeMany(t),e!=null&&(this._updateInfo.client+=e.length,this.graphics.addMany(e))}_initUpdateInterval(){this._clearInterval();const{updateInterval:e}=this.layer;let t=performance.now();this._updateIntervalId=setInterval(()=>{const r=performance.now(),c=r-t;if(c>L){t=r;const p=Math.round(this._updateInfo.client/(c/1e3)),h=Math.round(this._updateInfo.websocket/(c/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:p,websocket:h})}this.featuresManager.checkForUpdates()},e)}pauseStream(){this.isPaused=!0,this._clearInterval()}resumeStream(){this.isPaused=!1,this._initUpdateInterval()}disconnect(){this._shutdown()}connect(){this.connection==null&&this._startup()}clearGraphics(){this.graphics.clear()}};s([o()],n.prototype,"isPaused",void 0),s([o({constructOnly:!0})],n.prototype,"layer",void 0),s([o({constructOnly:!0})],n.prototype,"layerView",void 0),s([o()],n.prototype,"connection",void 0),s([o({readOnly:!0})],n.prototype,"updating",null),n=s([l("esri.layers.graphics.controllers.StreamController")],n);const N=e=>{let t=class extends e{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&this._streamConnectionStatus==="connected"?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return s([o()],t.prototype,"_isUserPaused",void 0),s([o({readOnly:!0})],t.prototype,"connectionStatus",null),s([o({type:V})],t.prototype,"filter",void 0),t=s([l("esri.layers.mixins.StreamLayerView")],t),t};let i=class extends N(x(j(E))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=k.ASYNC,this.hasZ=!0,this.hasM=!1}initialize(){this.addHandles(_(()=>this.suspended,e=>{this.controller&&this._onSuspendedChange(e)}))}get connectionError(){var t,r;const e=(r=(t=this.controller)==null?void 0:t.connection)==null?void 0:r.errorString;return e?new R("stream-controller",e):null}createQuery(){return new U({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(e,t){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(e),t==null?void 0:t.signal)}get _streamConnectionStatus(){var e,t;return((t=(e=this.controller)==null?void 0:e.connection)==null?void 0:t.connectionStatus)??"disconnected"}createController(){return new n({layer:this.layer,layerView:this})}beforeSetController(){}_doPause(){var e;(e=this.controller)==null||e.pauseStream()}_doResume(){var e;(e=this.controller)==null||e.resumeStream()}_doDisconnect(){var e;(e=this.controller)==null||e.disconnect(),this._doPause()}_doConnect(){var e;(e=this.controller)==null||e.connect(),this.resume()}_doClear(){var e;(e=this.controller)==null||e.clearGraphics()}};s([o({readOnly:!0})],i.prototype,"updatePolicy",void 0),s([o({readOnly:!0})],i.prototype,"connectionError",null),s([o()],i.prototype,"controller",void 0),s([o({readOnly:!0})],i.prototype,"hasZ",void 0),s([o({readOnly:!0})],i.prototype,"hasM",void 0),s([o({readOnly:!0})],i.prototype,"_streamConnectionStatus",null),i=s([l("esri.views.3d.layers.StreamLayerView3D")],i);const Ue=i;export{Ue as default};
