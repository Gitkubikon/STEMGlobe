const __vite__fileDeps=["assets/geometryEngineJSON-S2vUekVx.js","assets/geometryEngineBase-CSsJUngg.js","assets/index-Din4d8RI.js","assets/index-DRZRuSdj.css","assets/json-Wa8cmqdu.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{dO as f,dP as h,aM as g,dQ as m,aL as p,dR as y,dS as a,_ as w}from"./index-Din4d8RI.js";import{n as _}from"./date-M6n_RqpC.js";class I{constructor(){this.code=null,this.description=null}}class b{constructor(r){this.error=new I,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=r}}function c(n){return new b(n)}class P{constructor(r){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=r}}function v(n){return new P(n)}const u=new Set;function A(n,r,e,d=!1){u.clear();for(const i in e){const t=n.get(i);if(!t)continue;const o=q(t,e[i]);if(u.add(t.name),t&&(d||t.editable)){const l=f(t,o);if(l)return c(h(l,t,o));r[t.name]=o}}for(const i of(n==null?void 0:n.requiredFields)??[])if(!u.has(i.name))return c(`missing required field "${i.name}"`);return null}function q(n,r){let e=r;return g(n)&&typeof r=="string"?e=parseFloat(r):m(n)&&r!=null&&typeof r!="string"?e=String(r):p(n)&&typeof r=="string"&&(e=_(r)),y(e)}let s;function F(n,r){if(!n||!a(r))return n;if("rings"in n||"paths"in n){if(s==null)throw new TypeError("geometry engine not loaded");return s.simplify(r,n)}return n}async function j(){return s==null&&(s=await w(()=>import("./geometryEngineJSON-S2vUekVx.js").then(n=>n.g),__vite__mapDeps([0,1,2,3,4]))),s}async function G(n,r){!a(n)||r!=="esriGeometryPolygon"&&r!=="esriGeometryPolyline"||await j()}export{v as d,c as f,G as j,A as p,F as y};
